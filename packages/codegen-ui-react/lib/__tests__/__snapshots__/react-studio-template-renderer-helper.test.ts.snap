// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`react-studio-template-renderer-helper formatCode does not swallow prettier errors 1`] = `"Failed to format"`;

exports[`react-studio-template-renderer-helper formatCode formats code when prettier is installed 1`] = `
"const foo = 1;
const bar = false;
"
`;

exports[`react-studio-template-renderer-helper transpile fails to transpile with ScriptTarget ESNext 1`] = `"ScriptTarget 99 not supported with type declarations enabled, expected one of [0,1,2,3,4,5,6,7,8]"`;

exports[`react-studio-template-renderer-helper transpile fails to transpile with ScriptTarget Latest 1`] = `"ScriptTarget 99 not supported with type declarations enabled, expected one of [0,1,2,3,4,5,6,7,8]"`;

exports[`react-studio-template-renderer-helper transpile successfully transpiles with ScriptTarget ES3 1`] = `
"import * as React from \\"react\\";
import { CustomButtonProps } from \\"./CustomButton\\";
import { ViewTestProps } from \\"./ViewTest\\";
export declare type EscapeHatchProps = {
    [elementHierarchy: string]: Record<string, unknown>;
} | null;
export declare type VariantValues = {
    [key: string]: string;
};
export declare type Variant = {
    variantValues: VariantValues;
    overrides: EscapeHatchProps;
};
export declare type PrimitiveOverrideProps<T> = Partial<T> & React.DOMAttributes<HTMLDivElement>;
export declare type CustomParentAndChildrenOverridesProps = {
    CustomParentAndChildren?: ViewTestProps;
    MyCustomButton?: CustomButtonProps;
} & EscapeHatchProps;
export declare type CustomParentAndChildrenProps = React.PropsWithChildren<Partial<ViewTestProps> & {
    overrides?: CustomParentAndChildrenOverridesProps | undefined | null;
}>;
export default function CustomParentAndChildren(props: CustomParentAndChildrenProps): React.ReactElement;
"
`;

exports[`react-studio-template-renderer-helper transpile successfully transpiles with ScriptTarget ES5 1`] = `
"import * as React from \\"react\\";
import { CustomButtonProps } from \\"./CustomButton\\";
import { ViewTestProps } from \\"./ViewTest\\";
export declare type EscapeHatchProps = {
    [elementHierarchy: string]: Record<string, unknown>;
} | null;
export declare type VariantValues = {
    [key: string]: string;
};
export declare type Variant = {
    variantValues: VariantValues;
    overrides: EscapeHatchProps;
};
export declare type PrimitiveOverrideProps<T> = Partial<T> & React.DOMAttributes<HTMLDivElement>;
export declare type CustomParentAndChildrenOverridesProps = {
    CustomParentAndChildren?: ViewTestProps;
    MyCustomButton?: CustomButtonProps;
} & EscapeHatchProps;
export declare type CustomParentAndChildrenProps = React.PropsWithChildren<Partial<ViewTestProps> & {
    overrides?: CustomParentAndChildrenOverridesProps | undefined | null;
}>;
export default function CustomParentAndChildren(props: CustomParentAndChildrenProps): React.ReactElement;
"
`;

exports[`react-studio-template-renderer-helper transpile successfully transpiles with ScriptTarget ES2015 1`] = `
"import * as React from \\"react\\";
import { CustomButtonProps } from \\"./CustomButton\\";
import { ViewTestProps } from \\"./ViewTest\\";
export declare type EscapeHatchProps = {
    [elementHierarchy: string]: Record<string, unknown>;
} | null;
export declare type VariantValues = {
    [key: string]: string;
};
export declare type Variant = {
    variantValues: VariantValues;
    overrides: EscapeHatchProps;
};
export declare type PrimitiveOverrideProps<T> = Partial<T> & React.DOMAttributes<HTMLDivElement>;
export declare type CustomParentAndChildrenOverridesProps = {
    CustomParentAndChildren?: ViewTestProps;
    MyCustomButton?: CustomButtonProps;
} & EscapeHatchProps;
export declare type CustomParentAndChildrenProps = React.PropsWithChildren<Partial<ViewTestProps> & {
    overrides?: CustomParentAndChildrenOverridesProps | undefined | null;
}>;
export default function CustomParentAndChildren(props: CustomParentAndChildrenProps): React.ReactElement;
"
`;

exports[`react-studio-template-renderer-helper transpile successfully transpiles with ScriptTarget ES2016 1`] = `
"import * as React from \\"react\\";
import { CustomButtonProps } from \\"./CustomButton\\";
import { ViewTestProps } from \\"./ViewTest\\";
export declare type EscapeHatchProps = {
    [elementHierarchy: string]: Record<string, unknown>;
} | null;
export declare type VariantValues = {
    [key: string]: string;
};
export declare type Variant = {
    variantValues: VariantValues;
    overrides: EscapeHatchProps;
};
export declare type PrimitiveOverrideProps<T> = Partial<T> & React.DOMAttributes<HTMLDivElement>;
export declare type CustomParentAndChildrenOverridesProps = {
    CustomParentAndChildren?: ViewTestProps;
    MyCustomButton?: CustomButtonProps;
} & EscapeHatchProps;
export declare type CustomParentAndChildrenProps = React.PropsWithChildren<Partial<ViewTestProps> & {
    overrides?: CustomParentAndChildrenOverridesProps | undefined | null;
}>;
export default function CustomParentAndChildren(props: CustomParentAndChildrenProps): React.ReactElement;
"
`;

exports[`react-studio-template-renderer-helper transpile successfully transpiles with ScriptTarget ES2017 1`] = `
"import * as React from \\"react\\";
import { CustomButtonProps } from \\"./CustomButton\\";
import { ViewTestProps } from \\"./ViewTest\\";
export declare type EscapeHatchProps = {
    [elementHierarchy: string]: Record<string, unknown>;
} | null;
export declare type VariantValues = {
    [key: string]: string;
};
export declare type Variant = {
    variantValues: VariantValues;
    overrides: EscapeHatchProps;
};
export declare type PrimitiveOverrideProps<T> = Partial<T> & React.DOMAttributes<HTMLDivElement>;
export declare type CustomParentAndChildrenOverridesProps = {
    CustomParentAndChildren?: ViewTestProps;
    MyCustomButton?: CustomButtonProps;
} & EscapeHatchProps;
export declare type CustomParentAndChildrenProps = React.PropsWithChildren<Partial<ViewTestProps> & {
    overrides?: CustomParentAndChildrenOverridesProps | undefined | null;
}>;
export default function CustomParentAndChildren(props: CustomParentAndChildrenProps): React.ReactElement;
"
`;

exports[`react-studio-template-renderer-helper transpile successfully transpiles with ScriptTarget ES2018 1`] = `
"import * as React from \\"react\\";
import { CustomButtonProps } from \\"./CustomButton\\";
import { ViewTestProps } from \\"./ViewTest\\";
export declare type EscapeHatchProps = {
    [elementHierarchy: string]: Record<string, unknown>;
} | null;
export declare type VariantValues = {
    [key: string]: string;
};
export declare type Variant = {
    variantValues: VariantValues;
    overrides: EscapeHatchProps;
};
export declare type PrimitiveOverrideProps<T> = Partial<T> & React.DOMAttributes<HTMLDivElement>;
export declare type CustomParentAndChildrenOverridesProps = {
    CustomParentAndChildren?: ViewTestProps;
    MyCustomButton?: CustomButtonProps;
} & EscapeHatchProps;
export declare type CustomParentAndChildrenProps = React.PropsWithChildren<Partial<ViewTestProps> & {
    overrides?: CustomParentAndChildrenOverridesProps | undefined | null;
}>;
export default function CustomParentAndChildren(props: CustomParentAndChildrenProps): React.ReactElement;
"
`;

exports[`react-studio-template-renderer-helper transpile successfully transpiles with ScriptTarget ES2019 1`] = `
"import * as React from \\"react\\";
import { CustomButtonProps } from \\"./CustomButton\\";
import { ViewTestProps } from \\"./ViewTest\\";
export declare type EscapeHatchProps = {
    [elementHierarchy: string]: Record<string, unknown>;
} | null;
export declare type VariantValues = {
    [key: string]: string;
};
export declare type Variant = {
    variantValues: VariantValues;
    overrides: EscapeHatchProps;
};
export declare type PrimitiveOverrideProps<T> = Partial<T> & React.DOMAttributes<HTMLDivElement>;
export declare type CustomParentAndChildrenOverridesProps = {
    CustomParentAndChildren?: ViewTestProps;
    MyCustomButton?: CustomButtonProps;
} & EscapeHatchProps;
export declare type CustomParentAndChildrenProps = React.PropsWithChildren<Partial<ViewTestProps> & {
    overrides?: CustomParentAndChildrenOverridesProps | undefined | null;
}>;
export default function CustomParentAndChildren(props: CustomParentAndChildrenProps): React.ReactElement;
"
`;

exports[`react-studio-template-renderer-helper transpile successfully transpiles with ScriptTarget ES2020 1`] = `
"import * as React from \\"react\\";
import { CustomButtonProps } from \\"./CustomButton\\";
import { ViewTestProps } from \\"./ViewTest\\";
export declare type EscapeHatchProps = {
    [elementHierarchy: string]: Record<string, unknown>;
} | null;
export declare type VariantValues = {
    [key: string]: string;
};
export declare type Variant = {
    variantValues: VariantValues;
    overrides: EscapeHatchProps;
};
export declare type PrimitiveOverrideProps<T> = Partial<T> & React.DOMAttributes<HTMLDivElement>;
export declare type CustomParentAndChildrenOverridesProps = {
    CustomParentAndChildren?: ViewTestProps;
    MyCustomButton?: CustomButtonProps;
} & EscapeHatchProps;
export declare type CustomParentAndChildrenProps = React.PropsWithChildren<Partial<ViewTestProps> & {
    overrides?: CustomParentAndChildrenOverridesProps | undefined | null;
}>;
export default function CustomParentAndChildren(props: CustomParentAndChildrenProps): React.ReactElement;
"
`;

exports[`react-studio-template-renderer-helper transpile successfully transpiles with ScriptTarget ES2021 1`] = `
"import * as React from \\"react\\";
import { CustomButtonProps } from \\"./CustomButton\\";
import { ViewTestProps } from \\"./ViewTest\\";
export declare type EscapeHatchProps = {
    [elementHierarchy: string]: Record<string, unknown>;
} | null;
export declare type VariantValues = {
    [key: string]: string;
};
export declare type Variant = {
    variantValues: VariantValues;
    overrides: EscapeHatchProps;
};
export declare type PrimitiveOverrideProps<T> = Partial<T> & React.DOMAttributes<HTMLDivElement>;
export declare type CustomParentAndChildrenOverridesProps = {
    CustomParentAndChildren?: ViewTestProps;
    MyCustomButton?: CustomButtonProps;
} & EscapeHatchProps;
export declare type CustomParentAndChildrenProps = React.PropsWithChildren<Partial<ViewTestProps> & {
    overrides?: CustomParentAndChildrenOverridesProps | undefined | null;
}>;
export default function CustomParentAndChildren(props: CustomParentAndChildrenProps): React.ReactElement;
"
`;
