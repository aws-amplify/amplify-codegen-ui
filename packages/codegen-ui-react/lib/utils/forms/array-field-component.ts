/*
  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.

  Licensed under the Apache License, Version 2.0 (the "License").
  You may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
 */
import { factory, NodeFlags, SyntaxKind } from 'typescript';

/*
  const BadgeView = ({ badgeIndex }) => (
  }
*/
const closeIconPath = 'M10 10l5.09-5.09L10 10l5.09 5.09L10 10zm0 0L4.91 4.91 10 10l-5.09 5.09L10 10z';
const generateBadgeViewStatement = () =>
  factory.createVariableStatement(
    undefined,
    factory.createVariableDeclarationList(
      [
        factory.createVariableDeclaration(
          factory.createIdentifier('BadgeView'),
          undefined,
          undefined,
          factory.createArrowFunction(
            undefined,
            undefined,
            [
              factory.createParameterDeclaration(
                undefined,
                undefined,
                undefined,
                factory.createObjectBindingPattern([
                  factory.createBindingElement(undefined, undefined, factory.createIdentifier('badgeIndex'), undefined),
                ]),
                undefined,
                undefined,
              ),
            ],
            undefined,
            factory.createToken(SyntaxKind.EqualsGreaterThanToken),
            factory.createJsxElement(
              factory.createJsxOpeningElement(
                factory.createIdentifier('ScrollView'),
                undefined,
                factory.createJsxAttributes([
                  factory.createJsxAttribute(
                    factory.createIdentifier('height'),
                    factory.createStringLiteral('inherit'),
                  ),
                  factory.createJsxAttribute(factory.createIdentifier('width'), factory.createStringLiteral('inherit')),
                  factory.createJsxAttribute(
                    factory.createIdentifier('maxHeight'),
                    factory.createJsxExpression(undefined, factory.createStringLiteral('7rem')),
                  ),
                ]),
              ),
              [
                factory.createJsxExpression(
                  undefined,
                  factory.createCallExpression(
                    factory.createPropertyAccessExpression(
                      factory.createIdentifier('items'),
                      factory.createIdentifier('map'),
                    ),
                    undefined,
                    [
                      factory.createArrowFunction(
                        undefined,
                        undefined,
                        [
                          factory.createParameterDeclaration(
                            undefined,
                            undefined,
                            undefined,
                            factory.createIdentifier('value'),
                            undefined,
                            undefined,
                          ),
                          factory.createParameterDeclaration(
                            undefined,
                            undefined,
                            undefined,
                            factory.createIdentifier('index'),
                            undefined,
                            undefined,
                          ),
                        ],
                        undefined,
                        factory.createToken(SyntaxKind.EqualsGreaterThanToken),
                        factory.createBlock(
                          [
                            factory.createReturnStatement(
                              factory.createParenthesizedExpression(
                                factory.createJsxElement(
                                  factory.createJsxOpeningElement(
                                    factory.createIdentifier('Badge'),
                                    undefined,
                                    factory.createJsxAttributes([
                                      factory.createJsxAttribute(
                                        factory.createIdentifier('key'),
                                        factory.createJsxExpression(undefined, factory.createIdentifier('index')),
                                      ),
                                      factory.createJsxAttribute(
                                        factory.createIdentifier('style'),
                                        factory.createJsxExpression(
                                          undefined,
                                          factory.createObjectLiteralExpression(
                                            [
                                              factory.createPropertyAssignment(
                                                factory.createIdentifier('cursor'),
                                                factory.createStringLiteral('pointer'),
                                              ),
                                              factory.createPropertyAssignment(
                                                factory.createIdentifier('alignItems'),
                                                factory.createStringLiteral('center'),
                                              ),
                                              factory.createPropertyAssignment(
                                                factory.createIdentifier('marginRight'),
                                                factory.createNumericLiteral('3'),
                                              ),
                                              factory.createPropertyAssignment(
                                                factory.createIdentifier('marginTop'),
                                                factory.createNumericLiteral('3'),
                                              ),
                                              factory.createPropertyAssignment(
                                                factory.createIdentifier('backgroundColor'),
                                                factory.createConditionalExpression(
                                                  factory.createBinaryExpression(
                                                    factory.createIdentifier('index'),
                                                    factory.createToken(SyntaxKind.EqualsEqualsEqualsToken),
                                                    factory.createIdentifier('badgeIndex'),
                                                  ),
                                                  factory.createToken(SyntaxKind.QuestionToken),
                                                  factory.createStringLiteral('#B8CEF9'),
                                                  factory.createToken(SyntaxKind.ColonToken),
                                                  factory.createStringLiteral('#EFFf0F0'),
                                                ),
                                              ),
                                            ],
                                            false,
                                          ),
                                        ),
                                      ),
                                      factory.createJsxAttribute(
                                        factory.createIdentifier('onClick'),
                                        factory.createJsxExpression(
                                          undefined,
                                          factory.createArrowFunction(
                                            undefined,
                                            undefined,
                                            [],
                                            undefined,
                                            factory.createToken(SyntaxKind.EqualsGreaterThanToken),
                                            factory.createBlock(
                                              [
                                                factory.createExpressionStatement(
                                                  factory.createCallExpression(
                                                    factory.createIdentifier('setSelectedBadgeIndex'),
                                                    undefined,
                                                    [factory.createIdentifier('index')],
                                                  ),
                                                ),
                                                factory.createExpressionStatement(
                                                  factory.createCallExpression(
                                                    factory.createIdentifier('setCurrentValue'),
                                                    undefined,
                                                    [
                                                      factory.createElementAccessExpression(
                                                        factory.createIdentifier('items'),
                                                        factory.createIdentifier('index'),
                                                      ),
                                                    ],
                                                  ),
                                                ),
                                                factory.createExpressionStatement(
                                                  factory.createCallExpression(
                                                    factory.createPropertyAccessExpression(
                                                      factory.createPropertyAccessExpression(
                                                        factory.createIdentifier('textFieldRef'),
                                                        factory.createIdentifier('current'),
                                                      ),
                                                      factory.createIdentifier('focus'),
                                                    ),
                                                    undefined,
                                                    [],
                                                  ),
                                                ),
                                              ],
                                              false,
                                            ),
                                          ),
                                        ),
                                      ),
                                    ]),
                                  ),
                                  [
                                    factory.createJsxExpression(undefined, factory.createIdentifier('value')),
                                    factory.createJsxSelfClosingElement(
                                      factory.createIdentifier('Icon'),
                                      undefined,
                                      factory.createJsxAttributes([
                                        factory.createJsxAttribute(
                                          factory.createIdentifier('style'),
                                          factory.createJsxExpression(
                                            undefined,
                                            factory.createObjectLiteralExpression(
                                              [
                                                factory.createPropertyAssignment(
                                                  factory.createIdentifier('cursor'),
                                                  factory.createStringLiteral('pointer'),
                                                ),
                                                factory.createPropertyAssignment(
                                                  factory.createIdentifier('paddingLeft'),
                                                  factory.createNumericLiteral('3'),
                                                ),
                                                factory.createPropertyAssignment(
                                                  factory.createIdentifier('width'),
                                                  factory.createNumericLiteral('20'),
                                                ),
                                                factory.createPropertyAssignment(
                                                  factory.createIdentifier('height'),
                                                  factory.createNumericLiteral('20'),
                                                ),
                                              ],
                                              false,
                                            ),
                                          ),
                                        ),
                                        factory.createJsxAttribute(
                                          factory.createIdentifier('viewBox'),
                                          factory.createJsxExpression(
                                            undefined,
                                            factory.createObjectLiteralExpression(
                                              [
                                                factory.createPropertyAssignment(
                                                  factory.createIdentifier('width'),
                                                  factory.createNumericLiteral('20'),
                                                ),
                                                factory.createPropertyAssignment(
                                                  factory.createIdentifier('height'),
                                                  factory.createNumericLiteral('20'),
                                                ),
                                              ],
                                              false,
                                            ),
                                          ),
                                        ),
                                        factory.createJsxAttribute(
                                          factory.createIdentifier('paths'),
                                          factory.createJsxExpression(
                                            undefined,
                                            factory.createArrayLiteralExpression(
                                              [
                                                factory.createObjectLiteralExpression(
                                                  [
                                                    factory.createPropertyAssignment(
                                                      factory.createIdentifier('d'),
                                                      factory.createStringLiteral(closeIconPath),
                                                    ),
                                                    factory.createPropertyAssignment(
                                                      factory.createIdentifier('stroke'),
                                                      factory.createStringLiteral('black'),
                                                    ),
                                                  ],
                                                  false,
                                                ),
                                              ],
                                              false,
                                            ),
                                          ),
                                        ),
                                        factory.createJsxAttribute(
                                          factory.createIdentifier('ariaLabel'),
                                          factory.createStringLiteral('button'),
                                        ),
                                        factory.createJsxAttribute(
                                          factory.createIdentifier('onClick'),
                                          factory.createJsxExpression(
                                            undefined,
                                            factory.createArrowFunction(
                                              undefined,
                                              undefined,
                                              [
                                                factory.createParameterDeclaration(
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  factory.createIdentifier('event'),
                                                  undefined,
                                                  undefined,
                                                ),
                                              ],
                                              undefined,
                                              factory.createToken(SyntaxKind.EqualsGreaterThanToken),
                                              factory.createBlock(
                                                [
                                                  factory.createExpressionStatement(
                                                    factory.createCallExpression(
                                                      factory.createPropertyAccessExpression(
                                                        factory.createIdentifier('event'),
                                                        factory.createIdentifier('stopPropagation'),
                                                      ),
                                                      undefined,
                                                      [],
                                                    ),
                                                  ),
                                                  factory.createExpressionStatement(
                                                    factory.createCallExpression(
                                                      factory.createIdentifier('removeItem'),
                                                      undefined,
                                                      [factory.createIdentifier('index')],
                                                    ),
                                                  ),
                                                ],
                                                true,
                                              ),
                                            ),
                                          ),
                                        ),
                                      ]),
                                    ),
                                  ],
                                  factory.createJsxClosingElement(factory.createIdentifier('Badge')),
                                ),
                              ),
                            ),
                          ],
                          true,
                        ),
                      ),
                    ],
                  ),
                ),
              ],
              factory.createJsxClosingElement(factory.createIdentifier('ScrollView')),
            ),
          ),
        ),
      ],
      NodeFlags.Const,
    ),
  );

/* 
  <TextField />
*/
const createTextField = () =>
  factory.createJsxElement(
    factory.createJsxOpeningElement(
      factory.createIdentifier('TextField'),
      undefined,
      factory.createJsxAttributes([
        factory.createJsxAttribute(
          factory.createIdentifier('label'),
          factory.createJsxExpression(undefined, factory.createIdentifier('label')),
        ),
        factory.createJsxAttribute(
          factory.createIdentifier('value'),
          factory.createJsxExpression(undefined, factory.createIdentifier('currentValue')),
        ),
        factory.createJsxAttribute(
          factory.createIdentifier('errorMessage'),
          factory.createJsxExpression(undefined, factory.createIdentifier('errorMessage')),
        ),
        factory.createJsxAttribute(
          factory.createIdentifier('hasError'),
          factory.createJsxExpression(undefined, factory.createIdentifier('hasError')),
        ),
        factory.createJsxAttribute(
          factory.createIdentifier('onChange'),
          factory.createJsxExpression(undefined, factory.createIdentifier('handleOnChange')),
        ),
        factory.createJsxAttribute(
          factory.createIdentifier('onKeyDown'),
          factory.createJsxExpression(
            undefined,
            factory.createArrowFunction(
              undefined,
              undefined,
              [
                factory.createParameterDeclaration(
                  undefined,
                  undefined,
                  undefined,
                  factory.createIdentifier('e'),
                  undefined,
                  undefined,
                ),
              ],
              undefined,
              factory.createToken(SyntaxKind.EqualsGreaterThanToken),
              factory.createBlock(
                [
                  factory.createIfStatement(
                    factory.createBinaryExpression(
                      factory.createPropertyAccessExpression(
                        factory.createIdentifier('e'),
                        factory.createIdentifier('key'),
                      ),
                      factory.createToken(SyntaxKind.EqualsEqualsEqualsToken),
                      factory.createStringLiteral('Enter'),
                    ),
                    factory.createBlock(
                      [
                        factory.createExpressionStatement(
                          factory.createCallExpression(
                            factory.createPropertyAccessExpression(
                              factory.createIdentifier('e'),
                              factory.createIdentifier('preventDefault'),
                            ),
                            undefined,
                            [],
                          ),
                        ),
                        factory.createExpressionStatement(
                          factory.createCallExpression(factory.createIdentifier('addItem'), undefined, []),
                        ),
                      ],
                      true,
                    ),
                    undefined,
                  ),
                ],
                true,
              ),
            ),
          ),
        ),
        factory.createJsxAttribute(
          factory.createIdentifier('ref'),
          factory.createJsxExpression(undefined, factory.createIdentifier('textFieldRef')),
        ),
      ]),
    ),
    [],
    factory.createJsxClosingElement(factory.createIdentifier('TextField')),
  );

/*
<Flex justifyContent="flex-end">
        <Button></Button>
        <Button></Button>
      </Flex>
*/
const createFieldButtons = () =>
  factory.createJsxElement(
    factory.createJsxOpeningElement(
      factory.createIdentifier('Flex'),
      undefined,
      factory.createJsxAttributes([
        factory.createJsxAttribute(factory.createIdentifier('justifyContent'), factory.createStringLiteral('flex-end')),
      ]),
    ),
    [
      factory.createJsxElement(
        factory.createJsxOpeningElement(
          factory.createIdentifier('Button'),
          undefined,
          factory.createJsxAttributes([
            factory.createJsxAttribute(factory.createIdentifier('children'), factory.createStringLiteral('Cancel')),
            factory.createJsxAttribute(factory.createIdentifier('type'), factory.createStringLiteral('button')),
            factory.createJsxAttribute(
              factory.createIdentifier('onClick'),
              factory.createJsxExpression(
                undefined,
                factory.createArrowFunction(
                  undefined,
                  undefined,
                  [],
                  undefined,
                  factory.createToken(SyntaxKind.EqualsGreaterThanToken),
                  factory.createBlock(
                    [
                      factory.createExpressionStatement(
                        factory.createCallExpression(factory.createIdentifier('setCurrentValue'), undefined, [
                          factory.createStringLiteral(''),
                        ]),
                      ),
                      factory.createExpressionStatement(
                        factory.createCallExpression(factory.createIdentifier('setIsCurrentValueValid'), undefined, [
                          factory.createTrue(),
                        ]),
                      ),
                    ],
                    false,
                  ),
                ),
              ),
            ),
          ]),
        ),
        [],
        factory.createJsxClosingElement(factory.createIdentifier('Button')),
      ),
      factory.createJsxElement(
        factory.createJsxOpeningElement(
          factory.createIdentifier('Button'),
          undefined,
          factory.createJsxAttributes([
            factory.createJsxAttribute(factory.createIdentifier('children'), factory.createStringLiteral('Save')),
            factory.createJsxAttribute(factory.createIdentifier('variation'), factory.createStringLiteral('primary')),
            factory.createJsxAttribute(
              factory.createIdentifier('isDisabled'),
              factory.createJsxExpression(
                undefined,
                factory.createPrefixUnaryExpression(
                  SyntaxKind.ExclamationToken,
                  factory.createIdentifier('isCurrentValueValid'),
                ),
              ),
            ),
            factory.createJsxAttribute(
              factory.createIdentifier('onClick'),
              factory.createJsxExpression(undefined, factory.createIdentifier('addItem')),
            ),
          ]),
        ),
        [],
        factory.createJsxClosingElement(factory.createIdentifier('Button')),
      ),
    ],
    factory.createJsxClosingElement(factory.createIdentifier('Flex')),
  );

export const generateArrayFieldType = () =>
  factory.createTypeAliasDeclaration(
    undefined,
    [factory.createModifier(SyntaxKind.ExportKeyword)],
    factory.createIdentifier('ArrayFieldProps'),
    undefined,
    factory.createTypeLiteralNode([
      factory.createPropertySignature(
        undefined,
        factory.createIdentifier('label'),
        undefined,
        factory.createKeywordTypeNode(SyntaxKind.StringKeyword),
      ),
      factory.createPropertySignature(
        undefined,
        factory.createIdentifier('defaultValues'),
        factory.createToken(SyntaxKind.QuestionToken),
        factory.createArrayTypeNode(factory.createKeywordTypeNode(SyntaxKind.AnyKeyword)),
      ),
      factory.createPropertySignature(
        undefined,
        factory.createIdentifier('onChange'),
        factory.createToken(SyntaxKind.QuestionToken),
        factory.createFunctionTypeNode(
          undefined,
          [
            factory.createParameterDeclaration(
              undefined,
              undefined,
              undefined,
              factory.createIdentifier('items'),
              undefined,
              factory.createKeywordTypeNode(SyntaxKind.AnyKeyword),
              undefined,
            ),
          ],
          factory.createTypeReferenceNode(factory.createIdentifier('Promise'), [
            factory.createKeywordTypeNode(SyntaxKind.VoidKeyword),
          ]),
        ),
      ),
      factory.createPropertySignature(
        undefined,
        factory.createIdentifier('validateItem'),
        factory.createToken(SyntaxKind.QuestionToken),
        factory.createFunctionTypeNode(
          undefined,
          [
            factory.createParameterDeclaration(
              undefined,
              undefined,
              undefined,
              factory.createIdentifier('value'),
              undefined,
              factory.createKeywordTypeNode(SyntaxKind.AnyKeyword),
              undefined,
            ),
          ],
          factory.createTypeReferenceNode(factory.createIdentifier('Promise'), [
            factory.createTypeReferenceNode(factory.createIdentifier('ValidationResponse'), undefined),
          ]),
        ),
      ),
      factory.createPropertySignature(
        undefined,
        factory.createIdentifier('hasError'),
        factory.createToken(SyntaxKind.QuestionToken),
        factory.createKeywordTypeNode(SyntaxKind.BooleanKeyword),
      ),
      factory.createPropertySignature(
        undefined,
        factory.createIdentifier('errorMessage'),
        factory.createToken(SyntaxKind.QuestionToken),
        factory.createKeywordTypeNode(SyntaxKind.StringKeyword),
      ),
    ]),
  );

export const generateArrayFieldComponent = () => {
  const jsxStatement = factory.createReturnStatement(
    factory.createParenthesizedExpression(
      factory.createJsxElement(
        factory.createJsxOpeningElement(
          factory.createIdentifier('React.Fragment'),
          [],
          factory.createJsxAttributes([]),
        ),
        [
          createTextField(),
          createFieldButtons(),
          factory.createJsxExpression(
            undefined,
            factory.createBinaryExpression(
              factory.createPrefixUnaryExpression(
                SyntaxKind.ExclamationToken,
                factory.createPrefixUnaryExpression(
                  SyntaxKind.ExclamationToken,
                  factory.createPropertyAccessExpression(
                    factory.createIdentifier('items'),
                    factory.createIdentifier('length'),
                  ),
                ),
              ),
              factory.createToken(SyntaxKind.AmpersandAmpersandToken),
              factory.createJsxSelfClosingElement(
                factory.createIdentifier('BadgeView'),
                undefined,
                factory.createJsxAttributes([
                  factory.createJsxAttribute(
                    factory.createIdentifier('badgeIndex'),
                    factory.createJsxExpression(undefined, factory.createIdentifier('selectedBadgeIndex')),
                  ),
                ]),
              ),
            ),
          ),
          factory.createJsxSelfClosingElement(
            factory.createIdentifier('Divider'),
            undefined,
            factory.createJsxAttributes([
              factory.createJsxAttribute(
                factory.createIdentifier('orientation'),
                factory.createStringLiteral('horizontal'),
              ),
              factory.createJsxAttribute(
                factory.createIdentifier('marginTop'),
                factory.createJsxExpression(undefined, factory.createNumericLiteral('5')),
              ),
            ]),
          ),
        ],
        factory.createJsxClosingElement(factory.createIdentifier('React.Fragment')),
      ),
    ),
  );

  return factory.createFunctionDeclaration(
    undefined,
    [factory.createModifier(SyntaxKind.ExportKeyword)],
    undefined,
    factory.createIdentifier('ArrayField'),
    undefined,
    [
      factory.createParameterDeclaration(
        undefined,
        undefined,
        undefined,
        factory.createObjectBindingPattern([
          factory.createBindingElement(undefined, undefined, factory.createIdentifier('label'), undefined),
          factory.createBindingElement(undefined, undefined, factory.createIdentifier('errorMessage'), undefined),
          factory.createBindingElement(undefined, undefined, factory.createIdentifier('hasError'), undefined),
          factory.createBindingElement(
            undefined,
            undefined,
            factory.createIdentifier('defaultValues'),
            factory.createArrayLiteralExpression([], false),
          ),
          factory.createBindingElement(undefined, undefined, factory.createIdentifier('onChange'), undefined),
          factory.createBindingElement(undefined, undefined, factory.createIdentifier('validateItem'), undefined),
        ]),
        undefined,
        undefined,
        undefined,
      ),
    ], // variable statements
    undefined,
    factory.createBlock(
      [
        factory.createVariableStatement(
          undefined,
          factory.createVariableDeclarationList(
            [
              factory.createVariableDeclaration(
                factory.createArrayBindingPattern([
                  factory.createBindingElement(
                    undefined,
                    undefined,
                    factory.createIdentifier('currentValue'),
                    undefined,
                  ),
                  factory.createBindingElement(
                    undefined,
                    undefined,
                    factory.createIdentifier('setCurrentValue'),
                    undefined,
                  ),
                ]),
                undefined,
                undefined,
                factory.createCallExpression(
                  factory.createPropertyAccessExpression(
                    factory.createIdentifier('React'),
                    factory.createIdentifier('useState'),
                  ),
                  undefined,
                  [factory.createStringLiteral('')],
                ),
              ),
            ],
            NodeFlags.Const,
          ),
        ),
        factory.createVariableStatement(
          undefined,
          factory.createVariableDeclarationList(
            [
              factory.createVariableDeclaration(
                factory.createArrayBindingPattern([
                  factory.createBindingElement(
                    undefined,
                    undefined,
                    factory.createIdentifier('isCurrentValueValid'),
                    undefined,
                  ),
                  factory.createBindingElement(
                    undefined,
                    undefined,
                    factory.createIdentifier('setIsCurrentValueValid'),
                    undefined,
                  ),
                ]),
                undefined,
                undefined,
                factory.createCallExpression(
                  factory.createPropertyAccessExpression(
                    factory.createIdentifier('React'),
                    factory.createIdentifier('useState'),
                  ),
                  [factory.createKeywordTypeNode(SyntaxKind.BooleanKeyword)],
                  [factory.createTrue()],
                ),
              ),
            ],
            NodeFlags.Const,
          ),
        ),
        factory.createVariableStatement(
          undefined,
          factory.createVariableDeclarationList(
            [
              factory.createVariableDeclaration(
                factory.createArrayBindingPattern([
                  factory.createBindingElement(
                    undefined,
                    undefined,
                    factory.createIdentifier('selectedBadgeIndex'),
                    undefined,
                  ),
                  factory.createBindingElement(
                    undefined,
                    undefined,
                    factory.createIdentifier('setSelectedBadgeIndex'),
                    undefined,
                  ),
                ]),
                undefined,
                undefined,
                factory.createCallExpression(
                  factory.createPropertyAccessExpression(
                    factory.createIdentifier('React'),
                    factory.createIdentifier('useState'),
                  ),
                  undefined,
                  [],
                ),
              ),
            ],
            NodeFlags.Const,
          ),
        ),
        factory.createVariableStatement(
          undefined,
          factory.createVariableDeclarationList(
            [
              factory.createVariableDeclaration(
                factory.createArrayBindingPattern([
                  factory.createBindingElement(undefined, undefined, factory.createIdentifier('items'), undefined),
                  factory.createBindingElement(undefined, undefined, factory.createIdentifier('setItems'), undefined),
                ]),
                undefined,
                undefined,
                factory.createCallExpression(
                  factory.createPropertyAccessExpression(
                    factory.createIdentifier('React'),
                    factory.createIdentifier('useState'),
                  ),
                  undefined,
                  [factory.createIdentifier('defaultValues')],
                ),
              ),
            ],
            NodeFlags.Const,
          ),
        ),
        factory.createVariableStatement(
          undefined,
          factory.createVariableDeclarationList(
            [
              factory.createVariableDeclaration(
                factory.createIdentifier('textFieldRef'),
                undefined,
                undefined,
                factory.createCallExpression(
                  factory.createPropertyAccessExpression(
                    factory.createIdentifier('React'),
                    factory.createIdentifier('createRef'),
                  ),
                  undefined,
                  [],
                ),
              ),
            ],
            NodeFlags.Const,
          ),
        ),
        factory.createVariableStatement(
          undefined,
          factory.createVariableDeclarationList(
            [
              factory.createVariableDeclaration(
                factory.createIdentifier('handleOnChange'),
                undefined,
                undefined,
                factory.createArrowFunction(
                  [factory.createModifier(SyntaxKind.AsyncKeyword)],
                  undefined,
                  [
                    factory.createParameterDeclaration(
                      undefined,
                      undefined,
                      undefined,
                      factory.createIdentifier('e'),
                      undefined,
                      undefined,
                    ),
                  ],
                  undefined,
                  factory.createToken(SyntaxKind.EqualsGreaterThanToken),
                  factory.createBlock(
                    [
                      factory.createVariableStatement(
                        undefined,
                        factory.createVariableDeclarationList(
                          [
                            factory.createVariableDeclaration(
                              factory.createObjectBindingPattern([
                                factory.createBindingElement(
                                  undefined,
                                  undefined,
                                  factory.createIdentifier('value'),
                                  undefined,
                                ),
                              ]),
                              undefined,
                              undefined,
                              factory.createPropertyAccessExpression(
                                factory.createIdentifier('e'),
                                factory.createIdentifier('currentTarget'),
                              ),
                            ),
                          ],
                          NodeFlags.Const,
                        ),
                      ),
                      factory.createExpressionStatement(
                        factory.createCallExpression(factory.createIdentifier('setCurrentValue'), undefined, [
                          factory.createIdentifier('value'),
                        ]),
                      ),
                      factory.createIfStatement(
                        factory.createIdentifier('validateItem'),
                        factory.createBlock(
                          [
                            factory.createVariableStatement(
                              undefined,
                              factory.createVariableDeclarationList(
                                [
                                  factory.createVariableDeclaration(
                                    factory.createObjectBindingPattern([
                                      factory.createBindingElement(
                                        undefined,
                                        undefined,
                                        factory.createIdentifier('hasError'),
                                        undefined,
                                      ),
                                    ]),
                                    undefined,
                                    undefined,
                                    factory.createAwaitExpression(
                                      factory.createCallExpression(
                                        factory.createIdentifier('validateItem'),
                                        undefined,
                                        [factory.createIdentifier('value')],
                                      ),
                                    ),
                                  ),
                                ],
                                NodeFlags.Const,
                              ),
                            ),
                            factory.createExpressionStatement(
                              factory.createCallExpression(
                                factory.createIdentifier('setIsCurrentValueValid'),
                                undefined,
                                [
                                  factory.createPrefixUnaryExpression(
                                    SyntaxKind.ExclamationToken,
                                    factory.createIdentifier('hasError'),
                                  ),
                                ],
                              ),
                            ),
                          ],
                          true,
                        ),
                        undefined,
                      ),
                    ],
                    true,
                  ),
                ),
              ),
            ],
            NodeFlags.Const,
          ),
        ),
        factory.createVariableStatement(
          undefined,
          factory.createVariableDeclarationList(
            [
              factory.createVariableDeclaration(
                factory.createIdentifier('removeItem'),
                undefined,
                undefined,
                factory.createArrowFunction(
                  [factory.createModifier(SyntaxKind.AsyncKeyword)],
                  undefined,
                  [
                    factory.createParameterDeclaration(
                      undefined,
                      undefined,
                      undefined,
                      factory.createIdentifier('removeIndex'),
                      undefined,
                      undefined,
                    ),
                  ],
                  undefined,
                  factory.createToken(SyntaxKind.EqualsGreaterThanToken),
                  factory.createBlock(
                    [
                      factory.createVariableStatement(
                        undefined,
                        factory.createVariableDeclarationList(
                          [
                            factory.createVariableDeclaration(
                              factory.createIdentifier('newItems'),
                              undefined,
                              undefined,
                              factory.createCallExpression(
                                factory.createPropertyAccessExpression(
                                  factory.createIdentifier('items'),
                                  factory.createIdentifier('filter'),
                                ),
                                undefined,
                                [
                                  factory.createArrowFunction(
                                    undefined,
                                    undefined,
                                    [
                                      factory.createParameterDeclaration(
                                        undefined,
                                        undefined,
                                        undefined,
                                        factory.createIdentifier('value'),
                                        undefined,
                                        undefined,
                                      ),
                                      factory.createParameterDeclaration(
                                        undefined,
                                        undefined,
                                        undefined,
                                        factory.createIdentifier('index'),
                                        undefined,
                                        undefined,
                                      ),
                                    ],
                                    undefined,
                                    factory.createToken(SyntaxKind.EqualsGreaterThanToken),
                                    factory.createBinaryExpression(
                                      factory.createIdentifier('index'),
                                      factory.createToken(SyntaxKind.ExclamationEqualsEqualsToken),
                                      factory.createIdentifier('removeIndex'),
                                    ),
                                  ),
                                ],
                              ),
                            ),
                          ],
                          NodeFlags.Const,
                        ),
                      ),
                      factory.createIfStatement(
                        factory.createIdentifier('onChange'),
                        factory.createBlock(
                          [
                            factory.createExpressionStatement(
                              factory.createAwaitExpression(
                                factory.createCallExpression(factory.createIdentifier('onChange'), undefined, [
                                  factory.createIdentifier('newItems'),
                                ]),
                              ),
                            ),
                          ],
                          true,
                        ),
                        undefined,
                      ),
                      factory.createExpressionStatement(
                        factory.createCallExpression(factory.createIdentifier('setSelectedBadgeIndex'), undefined, [
                          factory.createIdentifier('undefined'),
                        ]),
                      ),
                      factory.createExpressionStatement(
                        factory.createCallExpression(factory.createIdentifier('setItems'), undefined, [
                          factory.createIdentifier('newItems'),
                        ]),
                      ),
                      factory.createExpressionStatement(
                        factory.createCallExpression(factory.createIdentifier('setCurrentValue'), undefined, [
                          factory.createStringLiteral(''),
                        ]),
                      ),
                    ],
                    true,
                  ),
                ),
              ),
            ],
            NodeFlags.Const,
          ),
        ),
        factory.createVariableStatement(
          undefined,
          factory.createVariableDeclarationList(
            [
              factory.createVariableDeclaration(
                factory.createIdentifier('addItem'),
                undefined,
                undefined,
                factory.createArrowFunction(
                  [factory.createModifier(SyntaxKind.AsyncKeyword)],
                  undefined,
                  [],
                  undefined,
                  factory.createToken(SyntaxKind.EqualsGreaterThanToken),
                  factory.createBlock(
                    [
                      factory.createIfStatement(
                        factory.createBinaryExpression(
                          factory.createPropertyAccessExpression(
                            factory.createIdentifier('currentValue'),
                            factory.createIdentifier('length'),
                          ),
                          factory.createToken(SyntaxKind.AmpersandAmpersandToken),
                          factory.createIdentifier('isCurrentValueValid'),
                        ),
                        factory.createBlock(
                          [
                            factory.createVariableStatement(
                              undefined,
                              factory.createVariableDeclarationList(
                                [
                                  factory.createVariableDeclaration(
                                    factory.createIdentifier('newItems'),
                                    undefined,
                                    undefined,
                                    factory.createArrayLiteralExpression(
                                      [factory.createSpreadElement(factory.createIdentifier('items'))],
                                      false,
                                    ),
                                  ),
                                ],
                                NodeFlags.Const,
                              ),
                            ),
                            factory.createIfStatement(
                              factory.createBinaryExpression(
                                factory.createIdentifier('selectedBadgeIndex'),
                                factory.createToken(SyntaxKind.ExclamationEqualsEqualsToken),
                                factory.createIdentifier('undefined'),
                              ),
                              factory.createBlock(
                                [
                                  factory.createExpressionStatement(
                                    factory.createBinaryExpression(
                                      factory.createElementAccessExpression(
                                        factory.createIdentifier('newItems'),
                                        factory.createIdentifier('selectedBadgeIndex'),
                                      ),
                                      factory.createToken(SyntaxKind.EqualsToken),
                                      factory.createIdentifier('currentValue'),
                                    ),
                                  ),
                                  factory.createExpressionStatement(
                                    factory.createCallExpression(factory.createIdentifier('setItems'), undefined, [
                                      factory.createIdentifier('newItems'),
                                    ]),
                                  ),
                                  factory.createExpressionStatement(
                                    factory.createCallExpression(
                                      factory.createIdentifier('setSelectedBadgeIndex'),
                                      undefined,
                                      [factory.createIdentifier('undefined')],
                                    ),
                                  ),
                                ],
                                true,
                              ),
                              factory.createBlock(
                                [
                                  factory.createExpressionStatement(
                                    factory.createCallExpression(
                                      factory.createPropertyAccessExpression(
                                        factory.createIdentifier('newItems'),
                                        factory.createIdentifier('push'),
                                      ),
                                      undefined,
                                      [factory.createIdentifier('currentValue')],
                                    ),
                                  ),
                                  factory.createExpressionStatement(
                                    factory.createCallExpression(factory.createIdentifier('setItems'), undefined, [
                                      factory.createIdentifier('newItems'),
                                    ]),
                                  ),
                                ],
                                true,
                              ),
                            ),
                            factory.createIfStatement(
                              factory.createIdentifier('onChange'),
                              factory.createBlock(
                                [
                                  factory.createExpressionStatement(
                                    factory.createAwaitExpression(
                                      factory.createCallExpression(factory.createIdentifier('onChange'), undefined, [
                                        factory.createIdentifier('newItems'),
                                      ]),
                                    ),
                                  ),
                                ],
                                true,
                              ),
                              undefined,
                            ),
                            factory.createExpressionStatement(
                              factory.createCallExpression(factory.createIdentifier('setCurrentValue'), undefined, [
                                factory.createStringLiteral(''),
                              ]),
                            ),
                          ],
                          true,
                        ),
                        undefined,
                      ),
                    ],
                    true,
                  ),
                ),
              ),
            ],
            NodeFlags.Const,
          ),
        ),
        generateBadgeViewStatement(),
        jsxStatement,
      ],
      true,
    ),
  );
};
/*
 <ArrayField
    label="Breeds"
    onChange={async (items) => {
      setModelFields({ ...modelFields, breeds: items });
    }}
    validateItem={async (item) => {
      return runValidationTasks("breeds", item);
    }}
    errorMessage={errors.breeds?.errorMessage}
    hasError={errors.breeds?.hasError}
    {...getOverrideProps(overrides, "breeds")}
  ></ArrayField>
 */
export const renderArrayFieldComponent = (fieldName: string, label: string) =>
  factory.createJsxElement(
    factory.createJsxOpeningElement(
      factory.createIdentifier('ArrayField'),
      undefined,
      factory.createJsxAttributes([
        factory.createJsxAttribute(factory.createIdentifier('label'), factory.createStringLiteral(label)),
        factory.createJsxAttribute(
          factory.createIdentifier('onChange'),
          factory.createJsxExpression(
            undefined,
            factory.createArrowFunction(
              [factory.createModifier(SyntaxKind.AsyncKeyword)],
              undefined,
              [
                factory.createParameterDeclaration(
                  undefined,
                  undefined,
                  undefined,
                  factory.createIdentifier('items'),
                  undefined,
                  undefined,
                  undefined,
                ),
              ],
              undefined,
              factory.createToken(SyntaxKind.EqualsGreaterThanToken),
              factory.createBlock(
                [
                  factory.createExpressionStatement(
                    factory.createCallExpression(factory.createIdentifier('setModelFields'), undefined, [
                      factory.createObjectLiteralExpression(
                        [
                          factory.createSpreadAssignment(factory.createIdentifier('modelFields')),
                          factory.createPropertyAssignment(
                            factory.createIdentifier(fieldName),
                            factory.createIdentifier('items'),
                          ),
                        ],
                        false,
                      ),
                    ]),
                  ),
                ],
                true,
              ),
            ),
          ),
        ),
        factory.createJsxAttribute(
          factory.createIdentifier('validateItem'),
          factory.createJsxExpression(
            undefined,
            factory.createArrowFunction(
              [factory.createModifier(SyntaxKind.AsyncKeyword)],
              undefined,
              [
                factory.createParameterDeclaration(
                  undefined,
                  undefined,
                  undefined,
                  factory.createIdentifier('item'),
                  undefined,
                  undefined,
                  undefined,
                ),
              ],
              undefined,
              factory.createToken(SyntaxKind.EqualsGreaterThanToken),
              factory.createBlock(
                [
                  factory.createReturnStatement(
                    factory.createCallExpression(factory.createIdentifier('runValidationTasks'), undefined, [
                      factory.createStringLiteral(fieldName),
                      factory.createIdentifier('item'),
                    ]),
                  ),
                ],
                true,
              ),
            ),
          ),
        ),
        factory.createJsxAttribute(
          factory.createIdentifier('errorMessage'),
          factory.createJsxExpression(
            undefined,
            factory.createPropertyAccessChain(
              factory.createPropertyAccessExpression(
                factory.createIdentifier('errors'),
                factory.createIdentifier(fieldName),
              ),
              factory.createToken(SyntaxKind.QuestionDotToken),
              factory.createIdentifier('errorMessage'),
            ),
          ),
        ),
        factory.createJsxAttribute(
          factory.createIdentifier('hasError'),
          factory.createJsxExpression(
            undefined,
            factory.createPropertyAccessChain(
              factory.createPropertyAccessExpression(
                factory.createIdentifier('errors'),
                factory.createIdentifier(fieldName),
              ),
              factory.createToken(SyntaxKind.QuestionDotToken),
              factory.createIdentifier('hasError'),
            ),
          ),
        ),
        factory.createJsxSpreadAttribute(
          factory.createCallExpression(factory.createIdentifier('getOverrideProps'), undefined, [
            factory.createIdentifier('overrides'),
            factory.createStringLiteral(fieldName),
          ]),
        ),
      ]),
    ),
    [],
    factory.createJsxClosingElement(factory.createIdentifier('ArrayField')),
  );
