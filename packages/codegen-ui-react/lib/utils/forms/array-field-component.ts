/*
  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.

  Licensed under the Apache License, Version 2.0 (the "License").
  You may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
 */
import { factory, JsxTagNamePropertyAccess, NodeFlags, SyntaxKind } from 'typescript';
import { addUseEffectWrapper } from '../generate-react-hooks';

export const generateArrayFieldComponent = () => {
  const errorMessagePropName = 'errorMessage';
  const errorStylesVariableName = 'errorStyles';

  const iconPath = 'M10 10l5.09-5.09L10 10l5.09 5.09L10 10zm0 0L4.91 4.91 10 10l-5.09 5.09L10 10z';

  const labelElementIdentifier = 'labelElement';

  const arraySection = 'arraySection';
  const bodyBlock = [
    // const labelElement = <Text>{label}</Text>
    factory.createVariableStatement(
      undefined,
      factory.createVariableDeclarationList(
        [
          factory.createVariableDeclaration(
            factory.createIdentifier(labelElementIdentifier),
            undefined,
            undefined,
            factory.createJsxElement(
              factory.createJsxOpeningElement(
                factory.createIdentifier('Text'),
                undefined,
                factory.createJsxAttributes([]),
              ),
              [factory.createJsxExpression(undefined, factory.createIdentifier('label'))],
              factory.createJsxClosingElement(factory.createIdentifier('Text')),
            ),
          ),
        ],
        NodeFlags.Const,
      ),
    ),
    /**
      const {
        tokens: {
          components: {
            fieldmessages: { error: errorStyles },
          },
        },
      } = useTheme();
     */
    factory.createVariableStatement(
      undefined,
      factory.createVariableDeclarationList(
        [
          factory.createVariableDeclaration(
            factory.createObjectBindingPattern([
              factory.createBindingElement(
                undefined,
                factory.createIdentifier('tokens'),
                factory.createObjectBindingPattern([
                  factory.createBindingElement(
                    undefined,
                    factory.createIdentifier('components'),
                    factory.createObjectBindingPattern([
                      factory.createBindingElement(
                        undefined,
                        factory.createIdentifier('fieldmessages'),
                        factory.createObjectBindingPattern([
                          factory.createBindingElement(
                            undefined,
                            factory.createIdentifier('error'),
                            factory.createIdentifier(errorStylesVariableName),
                            undefined,
                          ),
                        ]),
                        undefined,
                      ),
                    ]),
                    undefined,
                  ),
                ]),
                undefined,
              ),
            ]),
            undefined,
            undefined,
            factory.createCallExpression(factory.createIdentifier('useTheme'), undefined, []),
          ),
        ],
        NodeFlags.Const,
      ),
    ),
    factory.createVariableStatement(
      undefined,
      factory.createVariableDeclarationList(
        [
          factory.createVariableDeclaration(
            factory.createArrayBindingPattern([
              factory.createBindingElement(
                undefined,
                undefined,
                factory.createIdentifier('selectedBadgeIndex'),
                undefined,
              ),
              factory.createBindingElement(
                undefined,
                undefined,
                factory.createIdentifier('setSelectedBadgeIndex'),
                undefined,
              ),
            ]),
            undefined,
            undefined,
            factory.createCallExpression(
              factory.createPropertyAccessExpression(
                factory.createIdentifier('React'),
                factory.createIdentifier('useState'),
              ),
              undefined,
              [],
            ),
          ),
        ],
        NodeFlags.Const,
      ),
    ),
    factory.createVariableStatement(
      undefined,
      factory.createVariableDeclarationList(
        [
          factory.createVariableDeclaration(
            factory.createArrayBindingPattern([
              factory.createBindingElement(undefined, undefined, factory.createIdentifier('isEditing'), undefined),
              factory.createBindingElement(undefined, undefined, factory.createIdentifier('setIsEditing'), undefined),
            ]),
            undefined,
            undefined,
            factory.createCallExpression(
              factory.createPropertyAccessExpression(
                factory.createIdentifier('React'),
                factory.createIdentifier('useState'),
              ),
              undefined,
              [],
            ),
          ),
        ],
        NodeFlags.Const,
      ),
    ),

    addUseEffectWrapper(
      [
        factory.createIfStatement(
          factory.createIdentifier('isEditing'),
          factory.createBlock(
            [
              factory.createExpressionStatement(
                factory.createCallChain(
                  factory.createPropertyAccessChain(
                    factory.createPropertyAccessChain(
                      factory.createIdentifier('inputFieldRef'),
                      factory.createToken(SyntaxKind.QuestionDotToken),
                      factory.createIdentifier('current'),
                    ),
                    factory.createToken(SyntaxKind.QuestionDotToken),
                    factory.createIdentifier('focus'),
                  ),
                  undefined,
                  undefined,
                  [],
                ),
              ),
            ],
            true,
          ),
          undefined,
        ),
      ],
      ['isEditing'],
    ),

    factory.createVariableStatement(
      undefined,
      factory.createVariableDeclarationList(
        [
          factory.createVariableDeclaration(
            factory.createIdentifier('removeItem'),
            undefined,
            undefined,
            factory.createArrowFunction(
              [factory.createModifier(SyntaxKind.AsyncKeyword)],
              undefined,
              [
                factory.createParameterDeclaration(
                  undefined,
                  undefined,
                  undefined,
                  factory.createIdentifier('removeIndex'),
                  undefined,
                  undefined,
                ),
              ],
              undefined,
              factory.createToken(SyntaxKind.EqualsGreaterThanToken),
              factory.createBlock(
                [
                  factory.createVariableStatement(
                    undefined,
                    factory.createVariableDeclarationList(
                      [
                        factory.createVariableDeclaration(
                          factory.createIdentifier('newItems'),
                          undefined,
                          undefined,
                          factory.createCallExpression(
                            factory.createPropertyAccessExpression(
                              factory.createIdentifier('items'),
                              factory.createIdentifier('filter'),
                            ),
                            undefined,
                            [
                              factory.createArrowFunction(
                                undefined,
                                undefined,
                                [
                                  factory.createParameterDeclaration(
                                    undefined,
                                    undefined,
                                    undefined,
                                    factory.createIdentifier('value'),
                                    undefined,
                                    undefined,
                                  ),
                                  factory.createParameterDeclaration(
                                    undefined,
                                    undefined,
                                    undefined,
                                    factory.createIdentifier('index'),
                                    undefined,
                                    undefined,
                                  ),
                                ],
                                undefined,
                                factory.createToken(SyntaxKind.EqualsGreaterThanToken),
                                factory.createBinaryExpression(
                                  factory.createIdentifier('index'),
                                  factory.createToken(SyntaxKind.ExclamationEqualsEqualsToken),
                                  factory.createIdentifier('removeIndex'),
                                ),
                              ),
                            ],
                          ),
                        ),
                      ],
                      NodeFlags.Const,
                    ),
                  ),
                  factory.createExpressionStatement(
                    factory.createAwaitExpression(
                      factory.createCallExpression(factory.createIdentifier('onChange'), undefined, [
                        factory.createIdentifier('newItems'),
                      ]),
                    ),
                  ),
                  factory.createExpressionStatement(
                    factory.createCallExpression(factory.createIdentifier('setSelectedBadgeIndex'), undefined, [
                      factory.createIdentifier('undefined'),
                    ]),
                  ),
                ],
                true,
              ),
            ),
          ),
        ],
        NodeFlags.Const,
      ),
    ),
    factory.createVariableStatement(
      undefined,
      factory.createVariableDeclarationList(
        [
          factory.createVariableDeclaration(
            factory.createIdentifier('addItem'),
            undefined,
            undefined,
            factory.createArrowFunction(
              [factory.createModifier(SyntaxKind.AsyncKeyword)],
              undefined,
              [],
              undefined,
              factory.createToken(SyntaxKind.EqualsGreaterThanToken),
              factory.createBlock(
                [
                  factory.createVariableStatement(
                    undefined,
                    factory.createVariableDeclarationList(
                      [
                        factory.createVariableDeclaration(
                          factory.createObjectBindingPattern([
                            factory.createBindingElement(
                              undefined,
                              undefined,
                              factory.createIdentifier('hasError'),
                              undefined,
                            ),
                          ]),
                          undefined,
                          undefined,
                          factory.createCallExpression(factory.createIdentifier('runValidationTasks'), undefined, []),
                        ),
                      ],
                      NodeFlags.Const,
                    ),
                  ),
                  factory.createIfStatement(
                    factory.createBinaryExpression(
                      factory.createBinaryExpression(
                        factory.createBinaryExpression(
                          factory.createBinaryExpression(
                            factory.createIdentifier('currentFieldValue'),
                            factory.createToken(SyntaxKind.ExclamationEqualsEqualsToken),
                            factory.createIdentifier('undefined'),
                          ),
                          factory.createToken(SyntaxKind.AmpersandAmpersandToken),
                          factory.createBinaryExpression(
                            factory.createIdentifier('currentFieldValue'),
                            factory.createToken(SyntaxKind.ExclamationEqualsEqualsToken),
                            factory.createNull(),
                          ),
                        ),
                        factory.createToken(SyntaxKind.AmpersandAmpersandToken),
                        factory.createBinaryExpression(
                          factory.createIdentifier('currentFieldValue'),
                          factory.createToken(SyntaxKind.ExclamationEqualsEqualsToken),
                          factory.createStringLiteral(''),
                        ),
                      ),
                      factory.createToken(SyntaxKind.AmpersandAmpersandToken),
                      factory.createPrefixUnaryExpression(
                        SyntaxKind.ExclamationToken,
                        factory.createIdentifier('hasError'),
                      ),
                    ),
                    factory.createBlock(
                      [
                        factory.createVariableStatement(
                          undefined,
                          factory.createVariableDeclarationList(
                            [
                              factory.createVariableDeclaration(
                                factory.createIdentifier('newItems'),
                                undefined,
                                undefined,
                                factory.createArrayLiteralExpression(
                                  [factory.createSpreadElement(factory.createIdentifier('items'))],
                                  false,
                                ),
                              ),
                            ],
                            NodeFlags.Const,
                          ),
                        ),
                        factory.createIfStatement(
                          factory.createBinaryExpression(
                            factory.createIdentifier('selectedBadgeIndex'),
                            factory.createToken(SyntaxKind.ExclamationEqualsEqualsToken),
                            factory.createIdentifier('undefined'),
                          ),
                          factory.createBlock(
                            [
                              factory.createExpressionStatement(
                                factory.createBinaryExpression(
                                  factory.createElementAccessExpression(
                                    factory.createIdentifier('newItems'),
                                    factory.createIdentifier('selectedBadgeIndex'),
                                  ),
                                  factory.createToken(SyntaxKind.EqualsToken),
                                  factory.createIdentifier('currentFieldValue'),
                                ),
                              ),
                              factory.createExpressionStatement(
                                factory.createCallExpression(
                                  factory.createIdentifier('setSelectedBadgeIndex'),
                                  undefined,
                                  [factory.createIdentifier('undefined')],
                                ),
                              ),
                            ],
                            true,
                          ),
                          factory.createBlock(
                            [
                              factory.createExpressionStatement(
                                factory.createCallExpression(
                                  factory.createPropertyAccessExpression(
                                    factory.createIdentifier('newItems'),
                                    factory.createIdentifier('push'),
                                  ),
                                  undefined,
                                  [factory.createIdentifier('currentFieldValue')],
                                ),
                              ),
                            ],
                            true,
                          ),
                        ),
                        factory.createExpressionStatement(
                          factory.createAwaitExpression(
                            factory.createCallExpression(factory.createIdentifier('onChange'), undefined, [
                              factory.createIdentifier('newItems'),
                            ]),
                          ),
                        ),
                        factory.createExpressionStatement(
                          factory.createCallExpression(factory.createIdentifier('setIsEditing'), undefined, [
                            factory.createFalse(),
                          ]),
                        ),
                      ],
                      true,
                    ),
                    undefined,
                  ),
                ],
                true,
              ),
            ),
          ),
        ],
        NodeFlags.Const,
      ),
    ),

    factory.createVariableStatement(
      undefined,
      factory.createVariableDeclarationList(
        [
          factory.createVariableDeclaration(
            factory.createIdentifier(arraySection),
            undefined,
            undefined,
            factory.createJsxElement(
              factory.createJsxOpeningElement(
                factory.createPropertyAccessExpression(
                  factory.createIdentifier('React'),
                  factory.createIdentifier('Fragment'),
                ) as JsxTagNamePropertyAccess,
                undefined,
                factory.createJsxAttributes([]),
              ),
              [
                factory.createJsxExpression(
                  undefined,
                  factory.createBinaryExpression(
                    factory.createPrefixUnaryExpression(
                      SyntaxKind.ExclamationToken,
                      factory.createPrefixUnaryExpression(
                        SyntaxKind.ExclamationToken,
                        factory.createPropertyAccessChain(
                          factory.createIdentifier('items'),
                          factory.createToken(SyntaxKind.QuestionDotToken),
                          factory.createIdentifier('length'),
                        ),
                      ),
                    ),
                    factory.createToken(SyntaxKind.AmpersandAmpersandToken),
                    factory.createJsxElement(
                      factory.createJsxOpeningElement(
                        factory.createIdentifier('ScrollView'),
                        undefined,
                        factory.createJsxAttributes([
                          factory.createJsxAttribute(
                            factory.createIdentifier('height'),
                            factory.createStringLiteral('inherit'),
                          ),
                          factory.createJsxAttribute(
                            factory.createIdentifier('width'),
                            factory.createStringLiteral('inherit'),
                          ),
                          factory.createJsxAttribute(
                            factory.createIdentifier('maxHeight'),
                            factory.createJsxExpression(undefined, factory.createStringLiteral('7rem')),
                          ),
                        ]),
                      ),
                      [
                        factory.createJsxExpression(
                          undefined,
                          factory.createCallExpression(
                            factory.createPropertyAccessExpression(
                              factory.createIdentifier('items'),
                              factory.createIdentifier('map'),
                            ),
                            undefined,
                            [
                              factory.createArrowFunction(
                                undefined,
                                undefined,
                                [
                                  factory.createParameterDeclaration(
                                    undefined,
                                    undefined,
                                    undefined,
                                    factory.createIdentifier('value'),
                                    undefined,
                                    undefined,
                                  ),
                                  factory.createParameterDeclaration(
                                    undefined,
                                    undefined,
                                    undefined,
                                    factory.createIdentifier('index'),
                                    undefined,
                                    undefined,
                                  ),
                                ],
                                undefined,
                                factory.createToken(SyntaxKind.EqualsGreaterThanToken),
                                factory.createBlock(
                                  [
                                    factory.createReturnStatement(
                                      factory.createParenthesizedExpression(
                                        factory.createJsxElement(
                                          factory.createJsxOpeningElement(
                                            factory.createIdentifier('Badge'),
                                            undefined,
                                            factory.createJsxAttributes([
                                              factory.createJsxAttribute(
                                                factory.createIdentifier('key'),
                                                factory.createJsxExpression(
                                                  undefined,
                                                  factory.createIdentifier('index'),
                                                ),
                                              ),
                                              factory.createJsxAttribute(
                                                factory.createIdentifier('style'),
                                                factory.createJsxExpression(
                                                  undefined,
                                                  factory.createObjectLiteralExpression(
                                                    [
                                                      factory.createPropertyAssignment(
                                                        factory.createIdentifier('cursor'),
                                                        factory.createStringLiteral('pointer'),
                                                      ),
                                                      factory.createPropertyAssignment(
                                                        factory.createIdentifier('alignItems'),
                                                        factory.createStringLiteral('center'),
                                                      ),
                                                      factory.createPropertyAssignment(
                                                        factory.createIdentifier('marginRight'),
                                                        factory.createNumericLiteral('3'),
                                                      ),
                                                      factory.createPropertyAssignment(
                                                        factory.createIdentifier('marginTop'),
                                                        factory.createNumericLiteral('3'),
                                                      ),
                                                      factory.createPropertyAssignment(
                                                        factory.createIdentifier('backgroundColor'),
                                                        factory.createConditionalExpression(
                                                          factory.createBinaryExpression(
                                                            factory.createIdentifier('index'),
                                                            factory.createToken(SyntaxKind.EqualsEqualsEqualsToken),
                                                            factory.createIdentifier('selectedBadgeIndex'),
                                                          ),
                                                          factory.createToken(SyntaxKind.QuestionToken),
                                                          factory.createStringLiteral('#B8CEF9'),
                                                          factory.createToken(SyntaxKind.ColonToken),
                                                          factory.createStringLiteral(''),
                                                        ),
                                                      ),
                                                    ],
                                                    true,
                                                  ),
                                                ),
                                              ),
                                              factory.createJsxAttribute(
                                                factory.createIdentifier('onClick'),
                                                factory.createJsxExpression(
                                                  undefined,
                                                  factory.createArrowFunction(
                                                    undefined,
                                                    undefined,
                                                    [],
                                                    undefined,
                                                    factory.createToken(SyntaxKind.EqualsGreaterThanToken),
                                                    factory.createBlock(
                                                      [
                                                        factory.createExpressionStatement(
                                                          factory.createCallExpression(
                                                            factory.createIdentifier('setSelectedBadgeIndex'),
                                                            undefined,
                                                            [factory.createIdentifier('index')],
                                                          ),
                                                        ),
                                                        factory.createExpressionStatement(
                                                          factory.createCallExpression(
                                                            factory.createIdentifier('setFieldValue'),
                                                            undefined,
                                                            [
                                                              factory.createElementAccessExpression(
                                                                factory.createIdentifier('items'),
                                                                factory.createIdentifier('index'),
                                                              ),
                                                            ],
                                                          ),
                                                        ),

                                                        factory.createExpressionStatement(
                                                          factory.createCallExpression(
                                                            factory.createIdentifier('setIsEditing'),
                                                            undefined,
                                                            [factory.createTrue()],
                                                          ),
                                                        ),
                                                      ],
                                                      true,
                                                    ),
                                                  ),
                                                ),
                                              ),
                                            ]),
                                          ),
                                          [
                                            // { getBadgeText ? getBadgeText(value) : value.toString() }
                                            factory.createJsxExpression(
                                              undefined,
                                              factory.createConditionalExpression(
                                                factory.createIdentifier('getBadgeText'),
                                                factory.createToken(SyntaxKind.QuestionToken),
                                                factory.createCallExpression(
                                                  factory.createIdentifier('getBadgeText'),
                                                  undefined,
                                                  [factory.createIdentifier('value')],
                                                ),
                                                factory.createToken(SyntaxKind.ColonToken),
                                                factory.createCallExpression(
                                                  factory.createPropertyAccessExpression(
                                                    factory.createIdentifier('value'),
                                                    factory.createIdentifier('toString'),
                                                  ),
                                                  undefined,
                                                  [],
                                                ),
                                              ),
                                            ),
                                            factory.createJsxSelfClosingElement(
                                              factory.createIdentifier('Icon'),
                                              undefined,
                                              factory.createJsxAttributes([
                                                factory.createJsxAttribute(
                                                  factory.createIdentifier('style'),
                                                  factory.createJsxExpression(
                                                    undefined,
                                                    factory.createObjectLiteralExpression(
                                                      [
                                                        factory.createPropertyAssignment(
                                                          factory.createIdentifier('cursor'),
                                                          factory.createStringLiteral('pointer'),
                                                        ),
                                                        factory.createPropertyAssignment(
                                                          factory.createIdentifier('paddingLeft'),
                                                          factory.createNumericLiteral('3'),
                                                        ),
                                                        factory.createPropertyAssignment(
                                                          factory.createIdentifier('width'),
                                                          factory.createNumericLiteral('20'),
                                                        ),
                                                        factory.createPropertyAssignment(
                                                          factory.createIdentifier('height'),
                                                          factory.createNumericLiteral('20'),
                                                        ),
                                                      ],
                                                      true,
                                                    ),
                                                  ),
                                                ),
                                                factory.createJsxAttribute(
                                                  factory.createIdentifier('viewBox'),
                                                  factory.createJsxExpression(
                                                    undefined,
                                                    factory.createObjectLiteralExpression(
                                                      [
                                                        factory.createPropertyAssignment(
                                                          factory.createIdentifier('width'),
                                                          factory.createNumericLiteral('20'),
                                                        ),
                                                        factory.createPropertyAssignment(
                                                          factory.createIdentifier('height'),
                                                          factory.createNumericLiteral('20'),
                                                        ),
                                                      ],
                                                      false,
                                                    ),
                                                  ),
                                                ),
                                                factory.createJsxAttribute(
                                                  factory.createIdentifier('paths'),
                                                  factory.createJsxExpression(
                                                    undefined,
                                                    factory.createArrayLiteralExpression(
                                                      [
                                                        factory.createObjectLiteralExpression(
                                                          [
                                                            factory.createPropertyAssignment(
                                                              factory.createIdentifier('d'),
                                                              factory.createStringLiteral(iconPath),
                                                            ),
                                                            factory.createPropertyAssignment(
                                                              factory.createIdentifier('stroke'),
                                                              factory.createStringLiteral('black'),
                                                            ),
                                                          ],
                                                          true,
                                                        ),
                                                      ],
                                                      true,
                                                    ),
                                                  ),
                                                ),
                                                factory.createJsxAttribute(
                                                  factory.createIdentifier('ariaLabel'),
                                                  factory.createStringLiteral('button'),
                                                ),
                                                factory.createJsxAttribute(
                                                  factory.createIdentifier('onClick'),
                                                  factory.createJsxExpression(
                                                    undefined,
                                                    factory.createArrowFunction(
                                                      undefined,
                                                      undefined,
                                                      [
                                                        factory.createParameterDeclaration(
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          factory.createIdentifier('event'),
                                                          undefined,
                                                          undefined,
                                                        ),
                                                      ],
                                                      undefined,
                                                      factory.createToken(SyntaxKind.EqualsGreaterThanToken),
                                                      factory.createBlock(
                                                        [
                                                          factory.createExpressionStatement(
                                                            factory.createCallExpression(
                                                              factory.createPropertyAccessExpression(
                                                                factory.createIdentifier('event'),
                                                                factory.createIdentifier('stopPropagation'),
                                                              ),
                                                              undefined,
                                                              [],
                                                            ),
                                                          ),
                                                          factory.createExpressionStatement(
                                                            factory.createCallExpression(
                                                              factory.createIdentifier('removeItem'),
                                                              undefined,
                                                              [factory.createIdentifier('index')],
                                                            ),
                                                          ),
                                                        ],
                                                        true,
                                                      ),
                                                    ),
                                                  ),
                                                ),
                                              ]),
                                            ),
                                          ],
                                          factory.createJsxClosingElement(factory.createIdentifier('Badge')),
                                        ),
                                      ),
                                    ),
                                  ],
                                  true,
                                ),
                              ),
                            ],
                          ),
                        ),
                      ],
                      factory.createJsxClosingElement(factory.createIdentifier('ScrollView')),
                    ),
                  ),
                ),

                factory.createJsxSelfClosingElement(
                  factory.createIdentifier('Divider'),
                  undefined,
                  factory.createJsxAttributes([
                    factory.createJsxAttribute(
                      factory.createIdentifier('orientation'),
                      factory.createStringLiteral('horizontal'),
                    ),
                    factory.createJsxAttribute(
                      factory.createIdentifier('marginTop'),
                      factory.createJsxExpression(undefined, factory.createNumericLiteral('5')),
                    ),
                  ]),
                ),
              ],
              factory.createJsxClosingElement(
                factory.createPropertyAccessExpression(
                  factory.createIdentifier('React'),
                  factory.createIdentifier('Fragment'),
                ) as JsxTagNamePropertyAccess,
              ),
            ),
          ),
        ],
        NodeFlags.Const,
      ),
    ),

    /**
        if (lengthLimit !== undefined && items.length >= lengthLimit && !isEditing) {
         return <>{labelElement}{arraySection}</>;
        }
     */
    factory.createIfStatement(
      factory.createBinaryExpression(
        factory.createBinaryExpression(
          factory.createBinaryExpression(
            factory.createIdentifier('lengthLimit'),
            factory.createToken(SyntaxKind.ExclamationEqualsEqualsToken),
            factory.createIdentifier('undefined'),
          ),
          factory.createToken(SyntaxKind.AmpersandAmpersandToken),
          factory.createBinaryExpression(
            factory.createPropertyAccessExpression(
              factory.createIdentifier('items'),
              factory.createIdentifier('length'),
            ),
            factory.createToken(SyntaxKind.GreaterThanEqualsToken),
            factory.createIdentifier('lengthLimit'),
          ),
        ),
        factory.createToken(SyntaxKind.AmpersandAmpersandToken),
        factory.createPrefixUnaryExpression(SyntaxKind.ExclamationToken, factory.createIdentifier('isEditing')),
      ),
      factory.createBlock(
        [
          factory.createReturnStatement(
            factory.createJsxElement(
              factory.createJsxOpeningElement(
                factory.createPropertyAccessExpression(
                  factory.createIdentifier('React'),
                  factory.createIdentifier('Fragment'),
                ) as JsxTagNamePropertyAccess,
                undefined,
                factory.createJsxAttributes([]),
              ),
              [
                factory.createJsxExpression(undefined, factory.createIdentifier(labelElementIdentifier)),
                factory.createJsxExpression(undefined, factory.createIdentifier(arraySection)),
              ],
              factory.createJsxClosingElement(
                factory.createPropertyAccessExpression(
                  factory.createIdentifier('React'),
                  factory.createIdentifier('Fragment'),
                ) as JsxTagNamePropertyAccess,
              ),
            ),
          ),
        ],
        true,
      ),
      undefined,
    ),

    factory.createReturnStatement(
      factory.createParenthesizedExpression(
        factory.createJsxElement(
          factory.createJsxOpeningElement(
            factory.createPropertyAccessExpression(
              factory.createIdentifier('React'),
              factory.createIdentifier('Fragment'),
            ) as JsxTagNamePropertyAccess,
            undefined,
            factory.createJsxAttributes([]),
          ),
          [
            // {labelElement}
            factory.createJsxExpression(undefined, factory.createIdentifier(labelElementIdentifier)),
            factory.createJsxExpression(
              undefined,
              factory.createBinaryExpression(
                factory.createIdentifier('isEditing'),
                factory.createToken(SyntaxKind.AmpersandAmpersandToken),
                factory.createIdentifier('children'),
              ),
            ),
            factory.createJsxExpression(
              undefined,
              factory.createConditionalExpression(
                factory.createPrefixUnaryExpression(SyntaxKind.ExclamationToken, factory.createIdentifier('isEditing')),
                factory.createToken(SyntaxKind.QuestionToken),
                factory.createParenthesizedExpression(
                  factory.createJsxFragment(
                    factory.createJsxOpeningFragment(),
                    [
                      factory.createJsxElement(
                        factory.createJsxOpeningElement(
                          factory.createIdentifier('Button'),
                          undefined,
                          factory.createJsxAttributes([
                            factory.createJsxAttribute(
                              factory.createIdentifier('onClick'),
                              factory.createJsxExpression(
                                undefined,
                                factory.createArrowFunction(
                                  undefined,
                                  undefined,
                                  [],
                                  undefined,
                                  factory.createToken(SyntaxKind.EqualsGreaterThanToken),
                                  factory.createBlock(
                                    [
                                      factory.createExpressionStatement(
                                        factory.createCallExpression(
                                          factory.createIdentifier('setIsEditing'),
                                          undefined,
                                          [factory.createTrue()],
                                        ),
                                      ),
                                    ],
                                    true,
                                  ),
                                ),
                              ),
                            ),
                          ]),
                        ),
                        [factory.createJsxText('Add item', false)],
                        factory.createJsxClosingElement(factory.createIdentifier('Button')),
                      ),
                      /**
                        {errorMessage && hasError && (
                          <Text color={errorStyles.color} fontSize={errorStyles.fontSize}>
                            {errorMessage}
                          </Text>
                        )}
                      */
                      factory.createJsxExpression(
                        undefined,
                        factory.createBinaryExpression(
                          factory.createBinaryExpression(
                            factory.createIdentifier(errorMessagePropName),
                            factory.createToken(SyntaxKind.AmpersandAmpersandToken),
                            factory.createIdentifier('hasError'),
                          ),
                          factory.createToken(SyntaxKind.AmpersandAmpersandToken),
                          factory.createParenthesizedExpression(
                            factory.createJsxElement(
                              factory.createJsxOpeningElement(
                                factory.createIdentifier('Text'),
                                undefined,
                                factory.createJsxAttributes([
                                  factory.createJsxAttribute(
                                    factory.createIdentifier('color'),
                                    factory.createJsxExpression(
                                      undefined,
                                      factory.createPropertyAccessExpression(
                                        factory.createIdentifier(errorStylesVariableName),
                                        factory.createIdentifier('color'),
                                      ),
                                    ),
                                  ),
                                  factory.createJsxAttribute(
                                    factory.createIdentifier('fontSize'),
                                    factory.createJsxExpression(
                                      undefined,
                                      factory.createPropertyAccessExpression(
                                        factory.createIdentifier(errorStylesVariableName),
                                        factory.createIdentifier('fontSize'),
                                      ),
                                    ),
                                  ),
                                ]),
                              ),
                              [factory.createJsxExpression(undefined, factory.createIdentifier(errorMessagePropName))],
                              factory.createJsxClosingElement(factory.createIdentifier('Text')),
                            ),
                          ),
                        ),
                      ),
                    ],

                    factory.createJsxJsxClosingFragment(),
                  ),
                ),
                factory.createToken(SyntaxKind.ColonToken),
                factory.createParenthesizedExpression(
                  factory.createJsxElement(
                    factory.createJsxOpeningElement(
                      factory.createIdentifier('Flex'),
                      undefined,
                      factory.createJsxAttributes([
                        factory.createJsxAttribute(
                          factory.createIdentifier('justifyContent'),
                          factory.createStringLiteral('flex-end'),
                        ),
                      ]),
                    ),
                    [
                      factory.createJsxExpression(
                        undefined,
                        factory.createBinaryExpression(
                          factory.createParenthesizedExpression(
                            factory.createBinaryExpression(
                              factory.createIdentifier('currentFieldValue'),
                              factory.createToken(SyntaxKind.BarBarToken),
                              factory.createIdentifier('isEditing'),
                            ),
                          ),
                          factory.createToken(SyntaxKind.AmpersandAmpersandToken),
                          factory.createJsxElement(
                            factory.createJsxOpeningElement(
                              factory.createIdentifier('Button'),
                              undefined,
                              factory.createJsxAttributes([
                                factory.createJsxAttribute(
                                  factory.createIdentifier('children'),
                                  factory.createStringLiteral('Cancel'),
                                ),
                                factory.createJsxAttribute(
                                  factory.createIdentifier('type'),
                                  factory.createStringLiteral('button'),
                                ),
                                factory.createJsxAttribute(
                                  factory.createIdentifier('size'),
                                  factory.createStringLiteral('small'),
                                ),
                                factory.createJsxAttribute(
                                  factory.createIdentifier('onClick'),
                                  factory.createJsxExpression(
                                    undefined,
                                    factory.createArrowFunction(
                                      undefined,
                                      undefined,
                                      [],
                                      undefined,
                                      factory.createToken(SyntaxKind.EqualsGreaterThanToken),
                                      factory.createBlock(
                                        [
                                          factory.createExpressionStatement(
                                            factory.createCallExpression(
                                              factory.createIdentifier('setFieldValue'),
                                              undefined,
                                              [factory.createIdentifier('defaultFieldValue')],
                                            ),
                                          ),
                                          factory.createExpressionStatement(
                                            factory.createCallExpression(
                                              factory.createIdentifier('setIsEditing'),
                                              undefined,
                                              [factory.createFalse()],
                                            ),
                                          ),
                                          factory.createExpressionStatement(
                                            factory.createCallExpression(
                                              factory.createIdentifier('setSelectedBadgeIndex'),
                                              undefined,
                                              [factory.createIdentifier('undefined')],
                                            ),
                                          ),
                                        ],
                                        true,
                                      ),
                                    ),
                                  ),
                                ),
                              ]),
                            ),
                            [],
                            factory.createJsxClosingElement(factory.createIdentifier('Button')),
                          ),
                        ),
                      ),
                      factory.createJsxElement(
                        factory.createJsxOpeningElement(
                          factory.createIdentifier('Button'),
                          undefined,
                          factory.createJsxAttributes([
                            factory.createJsxAttribute(
                              factory.createIdentifier('size'),
                              factory.createStringLiteral('small'),
                            ),
                            factory.createJsxAttribute(
                              factory.createIdentifier('variation'),
                              factory.createStringLiteral('link'),
                            ),
                            factory.createJsxAttribute(
                              factory.createIdentifier('onClick'),
                              factory.createJsxExpression(undefined, factory.createIdentifier('addItem')),
                            ),
                          ]),
                        ),
                        [
                          factory.createJsxExpression(
                            undefined,
                            factory.createConditionalExpression(
                              factory.createBinaryExpression(
                                factory.createIdentifier('selectedBadgeIndex'),
                                factory.createToken(SyntaxKind.ExclamationEqualsEqualsToken),
                                factory.createIdentifier('undefined'),
                              ),
                              factory.createToken(SyntaxKind.QuestionToken),
                              factory.createStringLiteral('Save'),
                              factory.createToken(SyntaxKind.ColonToken),
                              factory.createStringLiteral('Add'),
                            ),
                          ),
                        ],
                        factory.createJsxClosingElement(factory.createIdentifier('Button')),
                      ),
                    ],
                    factory.createJsxClosingElement(factory.createIdentifier('Flex')),
                  ),
                ),
              ),
            ),
            // {arraySection}
            factory.createJsxExpression(undefined, factory.createIdentifier(arraySection)),
          ],
          factory.createJsxClosingElement(
            factory.createPropertyAccessExpression(
              factory.createIdentifier('React'),
              factory.createIdentifier('Fragment'),
            ) as JsxTagNamePropertyAccess,
          ),
        ),
      ),
    ),
  ];

  return factory.createFunctionDeclaration(
    undefined,
    undefined,
    undefined,
    factory.createIdentifier('ArrayField'),
    undefined,
    [
      factory.createParameterDeclaration(
        undefined,
        undefined,
        undefined,
        factory.createObjectBindingPattern([
          factory.createBindingElement(
            undefined,
            undefined,
            factory.createIdentifier('items'),
            factory.createArrayLiteralExpression([], false),
          ),
          factory.createBindingElement(undefined, undefined, factory.createIdentifier('onChange'), undefined),
          factory.createBindingElement(undefined, undefined, factory.createIdentifier('label'), undefined),
          factory.createBindingElement(undefined, undefined, factory.createIdentifier('inputFieldRef'), undefined),
          factory.createBindingElement(undefined, undefined, factory.createIdentifier('children'), undefined),
          factory.createBindingElement(undefined, undefined, factory.createIdentifier('hasError'), undefined),
          factory.createBindingElement(undefined, undefined, factory.createIdentifier('setFieldValue'), undefined),
          factory.createBindingElement(undefined, undefined, factory.createIdentifier('currentFieldValue'), undefined),
          factory.createBindingElement(undefined, undefined, factory.createIdentifier('defaultFieldValue'), undefined),
          factory.createBindingElement(undefined, undefined, factory.createIdentifier('lengthLimit'), undefined),
          factory.createBindingElement(undefined, undefined, factory.createIdentifier('getBadgeText'), undefined),
          factory.createBindingElement(undefined, undefined, factory.createIdentifier('runValidationTasks'), undefined),
          factory.createBindingElement(undefined, undefined, factory.createIdentifier(errorMessagePropName), undefined),
        ]),
        undefined,
        undefined,
        undefined,
      ),
    ],
    undefined,
    factory.createBlock(bodyBlock, true),
  );
};
